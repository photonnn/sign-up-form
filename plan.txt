Purpose of this text file is to journal my decisions partaking in this project.

1. Foundations:

The web page will follow a design, that is include in the assets folder.

Following the design, I will create 2 divs  and use flexbox to divide the 
screen in two areas. I will tackle left side first as it seems simpler.

2. Setting image as background: 

The background of the left side is an image, therefore I will make its width
the same as the width of the image.
Image is way to big so I decided to just use background-size to fit it in the
container. I will for, now let right side grow more.

3. Logo and text above image:

The first div will contain the logo and name and it will be placed on top of the
image. To do this, I will set image div as postion relative and logo div as 
position absolute. I'll use vh and then make a seperate media query for the 
mobile.

Just noticed that it is not necessary to make image to position realtive, as it
part of the background, therefore absolute can be replaced by relative for the 
text on top. Also just noticed, that if you put dev tools on the bottom, the 
height of the text does not scale properly, have to fix that.

Was just working on footer and I recognised that it is the easiest way to just,
make it absolute and use bottom: 0 to set it as footer, therefore I made left 
div relative again.

4. Right side:

It will have 3 divs, above, form and below. Above and below are pretty straight
forward, but form is a bit more complicated. Form includes 6 buttons, so I will
have to be careful that it does not break when I resize and I will have to add
pseudo-classes for focus and unchecked (I believe it is called).

Was planning to have each div have its own overflow, but now I've just realised
that does not really make any sense. I'll try to make only one scroll for right
side and keep the left side the same.

New day. I seem to have realised a few downsides of writing my thoughts like 
this, namely with it being somewhat unnecessary. I recognise that if I were to 
write JavaScript or solve problems having a document like this would be really
useful, but when doing html & css it becomes kind of reduntant. I say this 
because the logic behind html & css is elementary, the difficult part is 
implementing it. To do that you need to understand how things work, while you 
can just brute force with your editor and google, I feel that in that situation
a document like this would come into play, but all I am doing this writing a 
really generalised view of how I will tackle the problems. I recognise that if 
this were JavaScript or similar as mentioned before document like this, to write
things beforehand is useful, but now I seem to think that for html & css it may
be better to write things afterward after going to tribulations, having
recognised, what the optimal play is, that I have been able to deduce. I'll keep
on experimenting both here and in my mind.


